# Bar plot for Gender
bar_color <- c("pink","blue", "purple")
barplot(table(data$gender), xlab = "Gender", ylab = "Count", main = "Distribution of Gender", col= bar_color)
bar_color <- c("indianred","lightgreen")
barplot(table(data$ever_married), xlab = "Ever married", ylab = "Count", main = "Distribution of Maried Status", col= bar_color)
bar_color <- c("papayawhip","orchid")
barplot(table(data$Residence_type), xlab = "Resident Type", ylab = "Count", main = "Distribution of Resident Type", col= bar_color)
bar_color <- c("turquoise","wheat","tomato","thistle")
barplot(table(data$smoking_status), xlab = "Smoking Status", ylab = "Count", main = "Distribution of Smoking Status", col= bar_color)
# the variables and plot parameters being defined
variables <- c("age", "avg_glucose_level", "bmi")
xlabels <- c("Stroke", "Stroke", "Stroke")
ylabels <- c("Age", "Average Glucose Level", "BMI")
titles <- c("Distribution of Age by Stroke", "Distribution of Average Glucose Level by Stroke", "Distribution of BMI by Stroke")
legend_loc <- c("bottom","topleft", "bottom")
colors <- c("yellow", "orange")
# for loop to plot the box plots
for (i in 1:length(variables)) {
boxplot(formula(paste(variables[i], "~ stroke")), data = data,
xlab = xlabels[i], ylab = ylabels[i], main = titles[i],
horizontal = FALSE, col = colors)
legend(legend_loc[i], legend = c("Stroke", "No stroke"), fill = colors)
}
# Titles and labels for histograms
titles <- c("Distribution of Age", "Distribution of Average Glucose Level", "Distribution of BMI")
xlabels <- c("Age", "Average Glucose Level", "BMI")
# Colors for histograms
colors_histogram <- c(10, 3, 5)
# Loop through the variables
for (i in 1:length(variables)) {
# Plot histogram
hist(data[[variables[i]]], xlab = xlabels[i], main = titles[i], col = colors_histogram[i])
}
col <- c("avg_glucose_level", "bmi")
colors_replace <- c("darkmagenta", "darkcyan")
for (col in names(data)) {
if (is.numeric(data[[col]])) {  # Check if the column is numeric
q1 <- quantile(data[[col]], 0.25, na.rm = TRUE) # calculating 1st Quantile
q3 <- quantile(data[[col]], 0.75, na.rm = TRUE) # calculating 3rd Quantile
iqr <- q3 - q1 # Calculating IQR
# Setting threshold for our outliers of 1.5
lower_threshold <- q1 - 1.5 * iqr
upper_threshold <- q3 + 1.5 * iqr
# Finding outliers in our data
outliers <- data[[col]] < lower_threshold | data[[col]] > upper_threshold
# Replacing the outliers with the median data
#median_val <- median(data1[[col]], na.rm = TRUE)
## USE MEEANNNN
median_val <- median(data[[col]], na.rm = TRUE)
data[[col]][outliers] <- median_val
}
}
boxplot(data$avg_glucose_level, horizontal=TRUE, pch=20, main="avg_gul")
boxplot(data$bmi, horizontal=TRUE, pch=20, main="avg_gul")
col <- c("avg_glucose_level", "bmi")
colors_replace <- c("darkmagenta", "darkcyan")
for (col in names(data)) {
if (is.numeric(data[[col]])) {  # Check if the column is numeric
q1 <- quantile(data[[col]], 0.25, na.rm = TRUE) # calculating 1st Quantile
q3 <- quantile(data[[col]], 0.75, na.rm = TRUE) # calculating 3rd Quantile
iqr <- q3 - q1 # Calculating IQR
# Setting threshold for our outliers of 1.5
lower_threshold <- q1 - 1.5 * iqr
upper_threshold <- q3 + 1.5 * iqr
# Finding outliers in our data
outliers <- data[[col]] < lower_threshold | data[[col]] > upper_threshold
# Replacing the outliers with the median data
#median_val <- median(data1[[col]], na.rm = TRUE)
## USE MEEANNNN
median_val <- median(data[[col]], na.rm = TRUE)
data[[col]][outliers] <- median_val
}
}
boxplot(data$avg_glucose_level, horizontal=TRUE, pch=20, main="avg_gul")
boxplot(data$bmi, horizontal=TRUE, pch=20, main="avg_gul")
data <- read.csv('data/healthcare-dataset-stroke-data.csv')
head(data)
dim(data) # 5110 rows X 12 columns
# Checking if there is missing data in our data set
print("Structure of the data: ")
str(data) # Checking the structure of the dataframe
cat("\n")
# After seeing the data structure, BMI was in character data type so we convert it into numeric (Double)
# Converting the data type of bmi from chr to num
data$bmi <- as.numeric(data$bmi)
cat("\n")
print("Summary of the dataframe: ")
summary(data)
boxplot(data$bmi, horizontal=TRUE,main="Boxplot of BMI",col="darkcyan")
hist(data$bmi,main="Distrbution of BMI", col="darkcyan", xlab = "BMI", ylab = "Count")
# replacing the NA values in the dataset with the median
data$bmi <- ifelse(is.na(data$bmi), median(data$bmi, na.rm=TRUE), data$bmi)
# Checking the summary of the data again
print("Data Summary:")
summary(data)
cat("\n")
cat("\n")
print("Number of N/A data in our data:")
sum(is.na(data)) # sum of all na in our dataset
# Seeing the structure of our dataframe to find outliers
str(data)
boxplot(data$age, horizontal=TRUE,main="Boxplot of Age",col="limegreen")
boxplot(data$avg_glucose_level, horizontal=TRUE,main="Boxplot of avg_glucose_level",col="darkmagenta")
boxplot(data$bmi, horizontal=TRUE,main="Boxplot of bmi",col="darkcyan")
col <- c("avg_glucose_level", "bmi")
colors_replace <- c("darkmagenta", "darkcyan")
for (col_name in col) {
if (is.numeric(data[[col_name]])) {  # Check if the column is numeric
q1 <- quantile(data[[col_name]], 0.25, na.rm = TRUE) # calculating 1st Quantile
q3 <- quantile(data[[col_name]], 0.75, na.rm = TRUE) # calculating 3rd Quantile
iqr <- q3 - q1 # Calculating IQR
# Setting threshold for outliers as 1.5 times the IQR
lower_threshold <- q1 - 1.5 * iqr
upper_threshold <- q3 + 1.5 * iqr
# Finding outliers in the data
outliers <- data[[col_name]] < lower_threshold | data[[col_name]] > upper_threshold
# Replacing the outliers with the median value
median_val <- median(data[[col_name]], na.rm = TRUE)
data[[col_name]][outliers] <- median_val
}
}
boxplot(data$avg_glucose_level, horizontal=TRUE, pch=20, main="avg_gul")
boxplot(data$bmi, horizontal=TRUE, pch=20, main="avg_gul")
# Bar plot for Gender
bar_color <- c("pink","blue", "purple")
barplot(table(data$gender), xlab = "Gender", ylab = "Count", main = "Distribution of Gender", col= bar_color)
bar_color <- c("indianred","lightgreen")
barplot(table(data$ever_married), xlab = "Ever married", ylab = "Count", main = "Distribution of Maried Status", col= bar_color)
bar_color <- c("papayawhip","orchid")
barplot(table(data$Residence_type), xlab = "Resident Type", ylab = "Count", main = "Distribution of Resident Type", col= bar_color)
bar_color <- c("turquoise","wheat","tomato","thistle")
barplot(table(data$smoking_status), xlab = "Smoking Status", ylab = "Count", main = "Distribution of Smoking Status", col= bar_color)
# the variables and plot parameters being defined
variables <- c("age", "avg_glucose_level", "bmi")
xlabels <- c("Stroke", "Stroke", "Stroke")
ylabels <- c("Age", "Average Glucose Level", "BMI")
titles <- c("Distribution of Age by Stroke", "Distribution of Average Glucose Level by Stroke", "Distribution of BMI by Stroke")
legend_loc <- c("bottom","topleft", "bottom")
colors <- c("yellow", "orange")
# for loop to plot the box plots
for (i in 1:length(variables)) {
boxplot(formula(paste(variables[i], "~ stroke")), data = data,
xlab = xlabels[i], ylab = ylabels[i], main = titles[i],
horizontal = FALSE, col = colors)
legend(legend_loc[i], legend = c("Stroke", "No stroke"), fill = colors)
}
# Titles and labels for histograms
titles <- c("Distribution of Age", "Distribution of Average Glucose Level", "Distribution of BMI")
xlabels <- c("Age", "Average Glucose Level", "BMI")
# Colors for histograms
colors_histogram <- c(10, 3, 5)
# Loop through the variables
for (i in 1:length(variables)) {
# Plot histogram
hist(data[[variables[i]]], xlab = xlabels[i], main = titles[i], col = colors_histogram[i])
}
data <- read.csv('data/healthcare-dataset-stroke-data.csv')
head(data)
dim(data) # 5110 rows X 12 columns
# Checking if there is missing data in our data set
print("Structure of the data: ")
str(data) # Checking the structure of the dataframe
cat("\n")
# After seeing the data structure, BMI was in character data type so we convert it into numeric (Double)
# Converting the data type of bmi from chr to num
data$bmi <- as.numeric(data$bmi)
cat("\n")
print("Summary of the dataframe: ")
summary(data)
boxplot(data$bmi, horizontal=TRUE,main="Boxplot of BMI",col="darkcyan")
hist(data$bmi,main="Distrbution of BMI", col="darkcyan", xlab = "BMI", ylab = "Count")
# replacing the NA values in the dataset with the median
data$bmi <- ifelse(is.na(data$bmi), median(data$bmi, na.rm=TRUE), data$bmi)
# Checking the summary of the data again
print("Data Summary:")
summary(data)
cat("\n")
cat("\n")
print("Number of N/A data in our data:")
sum(is.na(data)) # sum of all na in our dataset
# Seeing the structure of our dataframe to find outliers
str(data)
boxplot(data$age, horizontal=TRUE,main="Boxplot of Age",col="limegreen")
boxplot(data$avg_glucose_level, horizontal=TRUE,main="Boxplot of avg_glucose_level",col="darkmagenta")
boxplot(data$bmi, horizontal=TRUE,main="Boxplot of bmi",col="darkcyan")
col <- c("avg_glucose_level", "bmi")
colors_replace <- c("darkmagenta", "darkcyan")
for (col_name in col) {
if (is.numeric(data[[col_name]])) {  # Check if the column is numeric
q1 <- quantile(data[[col_name]], 0.25, na.rm = TRUE) # calculating 1st Quantile
q3 <- quantile(data[[col_name]], 0.75, na.rm = TRUE) # calculating 3rd Quantile
iqr <- q3 - q1 # Calculating IQR
# Setting threshold for outliers as 1.5 times the IQR
lower_threshold <- q1 - 1.5 * iqr
upper_threshold <- q3 + 1.5 * iqr
# Finding outliers in the data
outliers <- data[[col_name]] < lower_threshold | data[[col_name]] > upper_threshold
# Replacing the outliers with the median value
median_val <- median(data[[col_name]], na.rm = TRUE)
data[[col_name]][outliers] <- median_val
boxplot(data[[col_name]], horizontal=TRUE, pch=20, main="avg_gul")
}
}
# Bar plot for Gender
bar_color <- c("pink","blue", "purple")
barplot(table(data$gender), xlab = "Gender", ylab = "Count", main = "Distribution of Gender", col= bar_color)
bar_color <- c("indianred","lightgreen")
barplot(table(data$ever_married), xlab = "Ever married", ylab = "Count", main = "Distribution of Maried Status", col= bar_color)
bar_color <- c("papayawhip","orchid")
barplot(table(data$Residence_type), xlab = "Resident Type", ylab = "Count", main = "Distribution of Resident Type", col= bar_color)
bar_color <- c("turquoise","wheat","tomato","thistle")
barplot(table(data$smoking_status), xlab = "Smoking Status", ylab = "Count", main = "Distribution of Smoking Status", col= bar_color)
# the variables and plot parameters being defined
variables <- c("age", "avg_glucose_level", "bmi")
xlabels <- c("Stroke", "Stroke", "Stroke")
ylabels <- c("Age", "Average Glucose Level", "BMI")
titles <- c("Distribution of Age by Stroke", "Distribution of Average Glucose Level by Stroke", "Distribution of BMI by Stroke")
legend_loc <- c("bottom","topleft", "bottom")
colors <- c("yellow", "orange")
# for loop to plot the box plots
for (i in 1:length(variables)) {
boxplot(formula(paste(variables[i], "~ stroke")), data = data,
xlab = xlabels[i], ylab = ylabels[i], main = titles[i],
horizontal = FALSE, col = colors)
legend(legend_loc[i], legend = c("Stroke", "No stroke"), fill = colors)
}
# Titles and labels for histograms
titles <- c("Distribution of Age", "Distribution of Average Glucose Level", "Distribution of BMI")
xlabels <- c("Age", "Average Glucose Level", "BMI")
# Colors for histograms
colors_histogram <- c(10, 3, 5)
# Loop through the variables
for (i in 1:length(variables)) {
# Plot histogram
hist(data[[variables[i]]], xlab = xlabels[i], main = titles[i], col = colors_histogram[i])
}
col <- c("avg_glucose_level", "bmi")
colors_replace <- c("darkmagenta", "darkcyan")
for (col_name in col) {
if (is.numeric(data[[col_name]])) {  # Check if the column is numeric
q1 <- quantile(data[[col_name]], 0.25, na.rm = TRUE) # calculating 1st Quantile
q3 <- quantile(data[[col_name]], 0.75, na.rm = TRUE) # calculating 3rd Quantile
iqr <- q3 - q1 # Calculating IQR
# Setting threshold for outliers as 1.5 times the IQR
lower_threshold <- q1 - 1.5 * iqr
upper_threshold <- q3 + 1.5 * iqr
# Finding outliers in the data
outliers <- data[[col_name]] < lower_threshold | data[[col_name]] > upper_threshold
# Replacing the outliers with the median value
median_val <- mean(data[[col_name]], na.rm = TRUE)
data[[col_name]][outliers] <- median_val
boxplot(data[[col_name]], horizontal=TRUE, pch=20, main="avg_gul")
}
}
col <- c("avg_glucose_level", "bmi")
colors_replace <- c("darkmagenta", "darkcyan")
for (col_name in col) {
if (is.numeric(data[[col_name]])) {  # Check if the column is numeric
q1 <- quantile(data[[col_name]], 0.25, na.rm = TRUE) # calculating 1st Quantile
q3 <- quantile(data[[col_name]], 0.75, na.rm = TRUE) # calculating 3rd Quantile
iqr <- q3 - q1 # Calculating IQR
# Setting threshold for outliers as 1.5 times the IQR
lower_threshold <- q1 - 1.5 * iqr
upper_threshold <- q3 + 1.5 * iqr
# Finding outliers in the data
outliers <- data[[col_name]] < lower_threshold | data[[col_name]] > upper_threshold
# Replacing the outliers with the median value
median_val <- median(data[[col_name]], na.rm = TRUE)
data[[col_name]][outliers] <- median_val
boxplot(data[[col_name]], horizontal=TRUE, pch=20, main="avg_gul")
}
}
data <- read.csv('data/healthcare-dataset-stroke-data.csv')
head(data)
dim(data) # 5110 rows X 12 columns
# Checking if there is missing data in our data set
print("Structure of the data: ")
str(data) # Checking the structure of the dataframe
cat("\n")
# After seeing the data structure, BMI was in character data type so we convert it into numeric (Double)
# Converting the data type of bmi from chr to num
data$bmi <- as.numeric(data$bmi)
cat("\n")
print("Summary of the dataframe: ")
summary(data)
boxplot(data$bmi, horizontal=TRUE,main="Boxplot of BMI",col="darkcyan")
hist(data$bmi,main="Distrbution of BMI", col="darkcyan", xlab = "BMI", ylab = "Count")
# replacing the NA values in the dataset with the median
data$bmi <- ifelse(is.na(data$bmi), median(data$bmi, na.rm=TRUE), data$bmi)
# Checking the summary of the data again
print("Data Summary:")
summary(data)
cat("\n")
cat("\n")
print("Number of N/A data in our data:")
sum(is.na(data)) # sum of all na in our dataset
# Seeing the structure of our dataframe to find outliers
str(data)
boxplot(data$age, horizontal=TRUE,main="Boxplot of Age",col="limegreen")
boxplot(data$avg_glucose_level, horizontal=TRUE,main="Boxplot of avg_glucose_level",col="darkmagenta")
boxplot(data$bmi, horizontal=TRUE,main="Boxplot of bmi",col="darkcyan")
col <- c("avg_glucose_level", "bmi")
colors_replace <- c("darkmagenta", "darkcyan")
for (col_name in col) {
if (is.numeric(data[[col_name]])) {  # Check if the column is numeric
q1 <- quantile(data[[col_name]], 0.25, na.rm = TRUE) # calculating 1st Quantile
q3 <- quantile(data[[col_name]], 0.75, na.rm = TRUE) # calculating 3rd Quantile
iqr <- q3 - q1 # Calculating IQR
# Setting threshold for outliers as 1.5 times the IQR
lower_threshold <- q1 - 1.5 * iqr
upper_threshold <- q3 + 1.5 * iqr
# Finding outliers in the data
outliers <- data[[col_name]] < lower_threshold | data[[col_name]] > upper_threshold
# Replacing the outliers with the median value
median_val <- median(data[[col_name]], na.rm = TRUE)
data[[col_name]][outliers] <- median_val
}
}
boxplot(data$avg_glucose_level, horizontal=TRUE, pch=20, main="avg_gul")
boxplot(data$bmi, horizontal=TRUE, pch=20, main="bmi")
# Bar plot for Gender
bar_color <- c("pink","blue", "purple")
barplot(table(data$gender), xlab = "Gender", ylab = "Count", main = "Distribution of Gender", col= bar_color)
bar_color <- c("indianred","lightgreen")
barplot(table(data$ever_married), xlab = "Ever married", ylab = "Count", main = "Distribution of Maried Status", col= bar_color)
bar_color <- c("papayawhip","orchid")
barplot(table(data$Residence_type), xlab = "Resident Type", ylab = "Count", main = "Distribution of Resident Type", col= bar_color)
bar_color <- c("turquoise","wheat","tomato","thistle")
barplot(table(data$smoking_status), xlab = "Smoking Status", ylab = "Count", main = "Distribution of Smoking Status", col= bar_color)
# the variables and plot parameters being defined
variables <- c("age", "avg_glucose_level", "bmi")
xlabels <- c("Stroke", "Stroke", "Stroke")
ylabels <- c("Age", "Average Glucose Level", "BMI")
titles <- c("Distribution of Age by Stroke", "Distribution of Average Glucose Level by Stroke", "Distribution of BMI by Stroke")
legend_loc <- c("bottom","topleft", "bottom")
colors <- c("yellow", "orange")
# for loop to plot the box plots
for (i in 1:length(variables)) {
boxplot(formula(paste(variables[i], "~ stroke")), data = data,
xlab = xlabels[i], ylab = ylabels[i], main = titles[i],
horizontal = FALSE, col = colors)
legend(legend_loc[i], legend = c("Stroke", "No stroke"), fill = colors)
}
# Titles and labels for histograms
titles <- c("Distribution of Age", "Distribution of Average Glucose Level", "Distribution of BMI")
xlabels <- c("Age", "Average Glucose Level", "BMI")
# Colors for histograms
colors_histogram <- c(10, 3, 5)
# Loop through the variables
for (i in 1:length(variables)) {
# Plot histogram
hist(data[[variables[i]]], xlab = xlabels[i], main = titles[i], col = colors_histogram[i])
}
boxplot(data$avg_glucose_level, horizontal=TRUE, pch=20, main="avg_gul")
boxplot(data$bmi, horizontal=TRUE, pch=20, main="bmi")
col <- c("avg_glucose_level", "bmi")
colors_replace <- c("darkmagenta", "darkcyan")
for (col_name in col) {
if (is.numeric(data[[col_name]])) {  # Check if the column is numeric
q1 <- quantile(data[[col_name]], 0.25, na.rm = TRUE) # calculating 1st Quantile
q3 <- quantile(data[[col_name]], 0.75, na.rm = TRUE) # calculating 3rd Quantile
iqr <- q3 - q1 # Calculating IQR
# Setting threshold for outliers as 1.5 times the IQR
lower_threshold <- q1 - 1.5 * iqr
upper_threshold <- q3 + 1.5 * iqr
# Finding outliers in the data
outliers <- data[[col_name]] < lower_threshold | data[[col_name]] > upper_threshold
# Replacing the outliers with the median value
median_val <- median(data[[col_name]], na.rm = TRUE)
data[[col_name]][outliers] <- median_val
}
}
boxplot(data$avg_glucose_level, horizontal=TRUE, pch=20, main="avg_gul")
boxplot(data$bmi, horizontal=TRUE, pch=20, main="bmi")
col <- c("avg_glucose_level", "bmi")
colors_replace <- c("darkmagenta", "darkcyan")
for (col_name in col) {
if (is.numeric(data[[col_name]])) {  # Check if the column is numeric
q1 <- quantile(data[[col_name]], 0.25, na.rm = TRUE) # calculating 1st Quantile
q3 <- quantile(data[[col_name]], 0.75, na.rm = TRUE) # calculating 3rd Quantile
iqr <- q3 - q1 # Calculating IQR
# Setting threshold for outliers as 1.5 times the IQR
lower_threshold <- q1 - 1.5 * iqr
upper_threshold <- q3 + 1.5 * iqr
# Finding outliers in the data
outliers <- data[[col_name]] < lower_threshold | data[[col_name]] > upper_threshold
# Replacing the outliers with the median value
median_val <- median(data[[col_name]], na.rm = TRUE)
data[[col_name]][outliers] <- median_val
}
}
boxplot(data$avg_glucose_level, horizontal=TRUE, pch=20, main="avg_gul")
boxplot(data$bmi, horizontal=TRUE, pch=20, main="bmi")
data <- read.csv('data/healthcare-dataset-stroke-data.csv')
head(data)
dim(data) # 5110 rows X 12 columns
# Checking if there is missing data in our data set
print("Structure of the data: ")
str(data) # Checking the structure of the dataframe
cat("\n")
# After seeing the data structure, BMI was in character data type so we convert it into numeric (Double)
# Converting the data type of bmi from chr to num
data$bmi <- as.numeric(data$bmi)
cat("\n")
print("Summary of the dataframe: ")
summary(data)
boxplot(data$bmi, horizontal=TRUE,main="Boxplot of BMI",col="darkcyan")
hist(data$bmi,main="Distrbution of BMI", col="darkcyan", xlab = "BMI", ylab = "Count")
# replacing the NA values in the dataset with the median
data$bmi <- ifelse(is.na(data$bmi), median(data$bmi, na.rm=TRUE), data$bmi)
# Checking the summary of the data again
print("Data Summary:")
summary(data)
cat("\n")
cat("\n")
print("Number of N/A data in our data:")
sum(is.na(data)) # sum of all na in our dataset
# Seeing the structure of our dataframe to find outliers
str(data)
boxplot(data$age, horizontal=TRUE,main="Boxplot of Age",col="limegreen")
boxplot(data$avg_glucose_level, horizontal=TRUE,main="Boxplot of avg_glucose_level",col="darkmagenta")
boxplot(data$bmi, horizontal=TRUE,main="Boxplot of bmi",col="darkcyan")
col <- c("avg_glucose_level", "bmi")
colors_replace <- c("darkmagenta", "darkcyan")
for (col_name in col) {
if (is.numeric(data[[col_name]])) {  # Check if the column is numeric
q1 <- quantile(data[[col_name]], 0.25, na.rm = TRUE) # calculating 1st Quantile
q3 <- quantile(data[[col_name]], 0.75, na.rm = TRUE) # calculating 3rd Quantile
iqr <- q3 - q1 # Calculating IQR
# Setting threshold for outliers as 1.5 times the IQR
lower_threshold <- q1 - 1.5 * iqr
upper_threshold <- q3 + 1.5 * iqr
# Finding outliers in the data
outliers <- data[[col_name]] < lower_threshold | data[[col_name]] > upper_threshold
# Replacing the outliers with the median value
median_val <- median(data[[col_name]], na.rm = TRUE)
data[[col_name]][outliers] <- median_val
}
}
boxplot(data$avg_glucose_level, horizontal=TRUE, pch=20, main="avg_gul")
boxplot(data$bmi, horizontal=TRUE, pch=20, main="bmi")
# Bar plot for Gender
bar_color <- c("pink","blue", "purple")
barplot(table(data$gender), xlab = "Gender", ylab = "Count", main = "Distribution of Gender", col= bar_color)
bar_color <- c("indianred","lightgreen")
barplot(table(data$ever_married), xlab = "Ever married", ylab = "Count", main = "Distribution of Maried Status", col= bar_color)
bar_color <- c("papayawhip","orchid")
barplot(table(data$Residence_type), xlab = "Resident Type", ylab = "Count", main = "Distribution of Resident Type", col= bar_color)
bar_color <- c("turquoise","wheat","tomato","thistle")
barplot(table(data$smoking_status), xlab = "Smoking Status", ylab = "Count", main = "Distribution of Smoking Status", col= bar_color)
# the variables and plot parameters being defined
variables <- c("age", "avg_glucose_level", "bmi")
xlabels <- c("Stroke", "Stroke", "Stroke")
ylabels <- c("Age", "Average Glucose Level", "BMI")
titles <- c("Distribution of Age by Stroke", "Distribution of Average Glucose Level by Stroke", "Distribution of BMI by Stroke")
legend_loc <- c("bottom","topleft", "bottom")
colors <- c("yellow", "orange")
# for loop to plot the box plots
for (i in 1:length(variables)) {
boxplot(formula(paste(variables[i], "~ stroke")), data = data,
xlab = xlabels[i], ylab = ylabels[i], main = titles[i],
horizontal = FALSE, col = colors)
legend(legend_loc[i], legend = c("Stroke", "No stroke"), fill = colors)
}
# Titles and labels for histograms
titles <- c("Distribution of Age", "Distribution of Average Glucose Level", "Distribution of BMI")
xlabels <- c("Age", "Average Glucose Level", "BMI")
# Colors for histograms
colors_histogram <- c(10, 3, 5)
# Loop through the variables
for (i in 1:length(variables)) {
# Plot histogram
hist(data[[variables[i]]], xlab = xlabels[i], main = titles[i], col = colors_histogram[i])
}
col <- c("avg_glucose_level", "bmi")
colors_replace <- c("darkmagenta", "darkcyan")
for (col_name in col) {
if (is.numeric(data[[col_name]])) {  # Check if the column is numeric
q1 <- quantile(data[[col_name]], 0.25, na.rm = TRUE) # calculating 1st Quantile
q3 <- quantile(data[[col_name]], 0.75, na.rm = TRUE) # calculating 3rd Quantile
iqr <- q3 - q1 # Calculating IQR
# Setting threshold for outliers as 1.5 times the IQR
lower_threshold <- q1 - 1.5 * iqr
upper_threshold <- q3 + 1.5 * iqr
# Finding outliers in the data
outliers <- data[[col_name]] < lower_threshold | data[[col_name]] > upper_threshold
# Replacing the outliers with the median value
median_val <- median(data[[col_name]], na.rm = TRUE)
data[[col_name]][outliers] <- median_val
}
}
boxplot(data$avg_glucose_level, horizontal=TRUE, pch=20, main="avg_gul")
boxplot(data$bmi, horizontal=TRUE, pch=20, main="bmi")
col <- c("avg_glucose_level", "bmi")
colors_replace <- c("darkmagenta", "darkcyan")
for (col_name in col) {
if (is.numeric(data[[col_name]])) {  # Check if the column is numeric
q1 <- quantile(data[[col_name]], 0.25, na.rm = TRUE) # calculating 1st Quantile
q3 <- quantile(data[[col_name]], 0.75, na.rm = TRUE) # calculating 3rd Quantile
iqr <- q3 - q1 # Calculating IQR
# Setting threshold for outliers as 1.5 times the IQR
lower_threshold <- q1 - 1.5 * iqr
upper_threshold <- q3 + 1.5 * iqr
# Finding outliers in the data
outliers <- data[[col_name]] < lower_threshold | data[[col_name]] > upper_threshold
# Replacing the outliers with the median value
median_val <- median(data[[col_name]], na.rm = TRUE)
data[[col_name]][outliers] <- median_val
}
}
boxplot(data$avg_glucose_level, horizontal=TRUE, pch=20, main="avg_gul")
boxplot(data$bmi, horizontal=TRUE, pch=20, main="bmi")
